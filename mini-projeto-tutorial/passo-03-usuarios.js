
// PASSO 3: SISTEMA DE USU√ÅRIOS
// =============================
// Conceitos aplicados: objetos, estruturas de controle, valida√ß√£o

console.log("üõí PASSO 3: SISTEMA DE USU√ÅRIOS");
console.log("=".repeat(50));

// 3.1 - FUN√á√ÉO PARA VALIDAR EMAIL (estruturas de controle + fun√ß√µes)
function validarEmail(email) {
    // Verifica√ß√£o b√°sica de email
    if (typeof email !== "string") {
        return false;
    }
    
    if (email.length < 5) {
        return false;
    }
    
    if (!email.includes("@")) {
        return false;
    }
    
    if (!email.includes(".")) {
        return false;
    }
    
    return true;
}

// 3.2 - FUN√á√ÉO PARA VALIDAR IDADE
function validarIdade(idade) {
    if (typeof idade !== "number") {
        return false;
    }
    
    if (idade < 0 || idade > 120) {
        return false;
    }
    
    return true;
}

// 3.3 - FUN√á√ÉO FACTORY PARA CRIAR USU√ÅRIOS
function criarUsuario(nome, email, idade, cidade) {
    // Valida√ß√µes usando estruturas de controle
    if (!nome || nome.length < 2) {
        console.log("‚ùå Erro: Nome deve ter pelo menos 2 caracteres");
        return null;
    }
    
    if (!validarEmail(email)) {
        console.log("‚ùå Erro: Email inv√°lido");
        return null;
    }
    
    if (!validarIdade(idade)) {
        console.log("‚ùå Erro: Idade inv√°lida");
        return null;
    }
    
    // Determinar categoria do cliente por idade
    let categoria;
    if (idade < 18) {
        categoria = "Menor";
    } else if (idade >= 18 && idade < 60) {
        categoria = "Adulto";
    } else {
        categoria = "Idoso";
    }
    
    // Determinar desconto por categoria
    let descontoPercentual;
    switch (categoria) {
        case "Menor":
            descontoPercentual = 5; // 5% desconto para menores
            break;
        case "Idoso":
            descontoPercentual = 10; // 10% desconto para idosos
            break;
        default:
            descontoPercentual = 0;
    }
    
    return {
        id: Date.now(), // ID simples baseado no timestamp
        nome,
        email,
        idade,
        cidade,
        categoria,
        descontoPercentual,
        ativo: true,
        dataCadastro: new Date(),
        totalCompras: 0,
        historicoCompras: [],
        
        // M√©todo para exibir informa√ß√µes
        exibirInfo() {
            return `${this.nome} (${this.idade} anos) - ${this.email} - ${this.categoria}`;
        },
        
        // M√©todo para verificar se pode comprar √°lcool
        podeComprarAlcool() {
            return this.idade >= 18;
        },
        
        // M√©todo para calcular desconto
        calcularDesconto(valor) {
            if (this.descontoPercentual > 0) {
                return valor * (this.descontoPercentual / 100);
            }
            return 0;
        },
        
        // M√©todo para adicionar compra ao hist√≥rico
        adicionarCompra(valor) {
            this.totalCompras += valor;
            this.historicoCompras.push({
                data: new Date(),
                valor: valor
            });
        }
    };
}

// 3.4 - CRIANDO USU√ÅRIOS COM VALIDA√á√ÉO
console.log("\nüë• CRIANDO USU√ÅRIOS:");

const usuarios = [];

// Usu√°rios v√°lidos
const usuario1 = criarUsuario("Ana Silva", "ana@email.com", 25, "S√£o Paulo");
const usuario2 = criarUsuario("Jo√£o Santos", "joao@email.com", 65, "Rio de Janeiro");
const usuario3 = criarUsuario("Maria Costa", "maria@email.com", 16, "Belo Horizonte");

// Tentativas com dados inv√°lidos
console.log("\n‚ö†Ô∏è TESTANDO VALIDA√á√ïES:");
const usuarioInvalido1 = criarUsuario("A", "email-inv√°lido", 25, "S√£o Paulo"); // Nome muito curto
const usuarioInvalido2 = criarUsuario("Pedro", "pedro@email.com", -5, "Salvador"); // Idade inv√°lida
const usuarioInvalido3 = criarUsuario("Carlos", "sem-arroba.com", 30, "Fortaleza"); // Email sem @

// Adicionando apenas usu√°rios v√°lidos
if (usuario1) usuarios.push(usuario1);
if (usuario2) usuarios.push(usuario2);
if (usuario3) usuarios.push(usuario3);

// 3.5 - EXIBINDO USU√ÅRIOS CADASTRADOS
console.log("\nüìã USU√ÅRIOS CADASTRADOS:");
for (let i = 0; i < usuarios.length; i++) {
    const usuario = usuarios[i];
    const podeAlcool = usuario.podeComprarAlcool() ? "‚úÖ" : "‚ùå";
    const desconto = usuario.descontoPercentual > 0 ? `${usuario.descontoPercentual}% desconto` : "Sem desconto";
    
    console.log(`${i + 1}. ${usuario.exibirInfo()}`);
    console.log(`   Pode comprar √°lcool: ${podeAlcool} | ${desconto}`);
}

// 3.6 - FUN√á√ÉO PARA BUSCAR USU√ÅRIO POR EMAIL
function buscarUsuarioPorEmail(email) {
    for (let usuario of usuarios) {
        if (usuario.email === email) {
            return usuario;
        }
    }
    return null;
}

// 3.7 - TESTANDO BUSCA E DESCONTOS
console.log("\nüîç TESTANDO BUSCA E DESCONTOS:");

const emailBusca = "joao@email.com";
const usuarioEncontrado = buscarUsuarioPorEmail(emailBusca);

if (usuarioEncontrado) {
    console.log(`Usu√°rio encontrado: ${usuarioEncontrado.nome}`);
    
    // Simulando compra com desconto
    const valorCompra = 100.00;
    const desconto = usuarioEncontrado.calcularDesconto(valorCompra);
    const valorFinal = valorCompra - desconto;
    
    console.log(`Valor da compra: R$${valorCompra.toFixed(2)}`);
    if (desconto > 0) {
        console.log(`Desconto aplicado: R$${desconto.toFixed(2)} (${usuarioEncontrado.descontoPercentual}%)`);
    }
    console.log(`Valor final: R$${valorFinal.toFixed(2)}`);
    
    // Registrando a compra
    usuarioEncontrado.adicionarCompra(valorFinal);
    console.log(`Total de compras do usu√°rio: R$${usuarioEncontrado.totalCompras.toFixed(2)}`);
} else {
    console.log("‚ùå Usu√°rio n√£o encontrado");
}

// 3.8 - RELAT√ìRIO DE USU√ÅRIOS POR CATEGORIA
console.log("\nüìä USU√ÅRIOS POR CATEGORIA:");

const relatorioCategoria = {
    "Menor": 0,
    "Adulto": 0,
    "Idoso": 0
};

for (let usuario of usuarios) {
    relatorioCategoria[usuario.categoria]++;
}

for (let categoria in relatorioCategoria) {
    console.log(`${categoria}: ${relatorioCategoria[categoria]} usu√°rio(s)`);
}

console.log("\n‚úÖ PASSO 3 CONCLU√çDO!");
console.log("Pr√≥ximo: Criar carrinho de compras com arrays");
